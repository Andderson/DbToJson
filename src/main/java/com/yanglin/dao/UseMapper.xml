<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yanglin.dao.UserMapper">
	<!-- 结果sql -->
	<resultMap id="BaseResultMap" type="com.yanglin.model.User">
		<id column="user_id" property="userId" jdbcType="CHAR" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_birthday" property="userBirthday"
			jdbcType="DATE" />
		<result column="user_salary" property="userSalary" jdbcType="DOUBLE" />
	</resultMap>
	
	<!-- 表字段sql -->
	<sql id="Base_Column_List">
		user_id, user_name, user_birthday, user_salary
	</sql>
	
	<!-- 根据主键查询用户信息 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from t_user
		where user_id = #{userId,jdbcType=CHAR}
	</select>
	
	<!-- 根据主键删除用户信息 -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from t_user
		where user_id = #{userId,jdbcType=CHAR}
	</delete>
	
	<!-- 增加新用户 -->
	<insert id="insert" parameterType="com.yanglin.model.User">
		insert into t_user (user_id,
		user_name, user_birthday,
		user_salary)
		values (#{userId,jdbcType=CHAR},
		#{userName,jdbcType=VARCHAR},
		#{userBirthday,jdbcType=DATE},
		#{userSalary,jdbcType=DOUBLE})
	</insert>
	
	<!-- 有选择的插入 -->
	<insert id="insertSelective" parameterType="com.yanglin.model.User">
		insert into t_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="userBirthday != null">
				user_birthday,
			</if>
			<if test="userSalary != null">
				user_salary,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=CHAR},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="userBirthday != null">
				#{userBirthday,jdbcType=DATE},
			</if>
			<if test="userSalary != null">
				#{userSalary,jdbcType=DOUBLE},
			</if>
		</trim>
	</insert>
	
	<!-- 根据主键，并有选择的更新用户信息 -->
	<update id="updateByPrimaryKeySelective" parameterType="com.yanglin.model.User">
		update t_user
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="userBirthday != null">
				user_birthday = #{userBirthday,jdbcType=DATE},
			</if>
			<if test="userSalary != null">
				user_salary = #{userSalary,jdbcType=DOUBLE},
			</if>
		</set>
		where user_id = #{userId,jdbcType=CHAR}
	</update>
	
	<!-- 根据主键，更新用户的所有字段的信息 -->
	<update id="updateByPrimaryKey" parameterType="com.yanglin.model.User">
		update t_user
		set
		user_name = #{userName,jdbcType=VARCHAR},
		user_birthday =
		#{userBirthday,jdbcType=DATE},
		user_salary =
		#{userSalary,jdbcType=DOUBLE}
		where user_id = #{userId,jdbcType=CHAR}
	</update>
	
	<select id="getDistinctReportNo" resultType="java.lang.String">
		select distinct t.guanlian_baoanhao from reportinfo t
	</select>
	
	<select id="getReportInfo" resultType="com.insuranceservices.model.claim.ClaimReportInfo">
		select 
		  t.`soruce` claimResource,
		  t.`accidentrecords` historyAccidentCount,
		  t.`reportNo` claimNumber,
		  t.`reportNo` associatedClaimNumber,
		  t.`casetype` claimType,
		  t.`reporter` reporter,
		  t.`reporterphonenumber` reporterTel,
		  t.`reporttime` reportDate,
		  case
		    when t.`isfirstscenereport` = '是' 
		    then 1 
		    when t.`isfirstscenereport` = '否' 
		    then 0 
		  end as reportedOnSite,
		  t.`accidenttime` accidentDate,
		  t.`accidentplace` accidentArea,
		  t.`accidentreason` accidentReason,
		  t.`accidentdescribe` accidentDescription,
		  case
		    t.`isaccidentotherplace` 
		    when '是' 
		    then 1 
		    when '否' 
		    then 0 
		    else 0 
		  end as isRemoteAccident,
		  t.`reportdriver` driverName,
		  t.drivergender driverGender,
		  t.`accidenttype` accidentResponsibility,
		  t.`insuredpersonname` accidentType,
		  case
		    t.isreporterinsured 
		    when '是' 
		    then 1 
		    when '否' 
		    then 0 
		    else 0 
		  end as reporterIsInsured,
		  t.insuredpersonname theInsuredName,
		  t.insuredpersonphoneNo theInsuredContact,
		  t.policynumber remark 
		from
		  reportinfo t	
		where t.reportNo = #{reportNo}
	
	</select>
	
	
</mapper>